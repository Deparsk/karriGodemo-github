#name: GitHub Actions Demo
#run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
#on: [push]
#jobs:
#  Explore-GitHub-Actions:
#    runs-on: ubuntu-latest
#    steps:
#      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
#      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
#      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
#      - name: Check out repository code
#        uses: actions/checkout@v4
#      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
#      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
#      - name: List files in the repository
#        run: |
#          ls ${{ github.workspace }}
#      - run: echo "🍏 This job's status is ${{ job.status }}."


# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Project karriGo-demo-flow
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Build with Maven
        run: mvn clean install

      - name: Build & push Docker image
        uses: deparsk/docker-build@v5
        with:
          image: deparsk/cicd-github-actions
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME}}
          password: ${{secrets.Docker_PASSWORD}}


